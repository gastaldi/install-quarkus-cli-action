name: Install Quarkus CLI
description: |
  Installs a version of Quarkus CLI into the job tool cache using simple shell scripts

branding:
  icon: copy
  color: orange

inputs:
  version:
    required: false
    description: "Version of Quarkus CLI to install"
    default: "3.0.0.Beta1"

outputs:
  found:
    description: "If 'true', quarkus was already found on this runner"
    value: "${{ steps.quarkus-check-unix.outputs.found == 'true' || steps.quarkus-check-windows.outputs.found == 'true' }}"
  installed:
    description: "If 'true', quarkus was installed by this action"
    value: "${{ inputs.force == 'true' || steps.quarkus-check-unix.outputs.found == 'false' || steps.quarkus-check-windows.outputs.found == 'false' }}"

runs:
  using: composite
  steps:
    - name: 'Check for quarkus - Unix-ish'
      id: quarkus-check-unix
      if: (runner.os == 'Linux' || runner.os == 'macOS')
      shell: bash +e {0}
      run: |
        _quarkus_bin="$(which quarkus)"
        if [ -f "${_quarkus_bin}" ]; then
          echo "found=true" >> $GITHUB_OUTPUT
        else
          echo "found=false" >> $GITHUB_OUTPUT
        fi

    - name: 'Install quarkus - Unix-ish'
      if: (runner.os == 'Linux' || runner.os == 'macOS') && (steps.quarkus-check-unix.outputs.found == 'false' || inputs.force == 'true')
      shell: bash
      env:
        DL_COMPRESSED: "${{ inputs.download-compressed == 'true' }}"
        QUARKUS_VERSION: '${{ inputs.version }}'
      run: $GITHUB_ACTION_PATH/scripts/unixish.sh

#    - name: 'Check for quarkus - Windows-ish'
#      id: quarkus-check-windows
#      if: runner.os == 'Windows'
#      shell: powershell
#      run: |
#        if (Get-Command "quarkus.exe" -ErrorAction SilentlyContinue)
#        {
#            Add-Content $Env:GITHUB_OUTPUT "found=true"
#        }
#        else
#        {
#            Add-Content $Env:GITHUB_OUTPUT "found=false"
#        }

#    - name: 'Install quarkus - Windows-ish'
#      if: runner.os == 'Windows' && (steps.quarkus-check-windows.outputs.found == 'false' || inputs.force == 'true')
#      shell: powershell
#      env:
#        DL_COMPRESSED: "${{ inputs.download-compressed == 'true' }}"
#        YQ_VERSION: '${{ inputs.version }}'
#      run: '& $Env:GITHUB_ACTION_PATH\scripts\windowsish.ps1'
